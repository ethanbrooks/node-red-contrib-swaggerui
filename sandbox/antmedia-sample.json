[
    {
        "id": "2d0a6c6c.43d744",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a1625e25.9e872",
        "type": "http in",
        "z": "2d0a6c6c.43d744",
        "name": "",
        "url": "/antmedia",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "afe81751.1ae778"
            ]
        ]
    },
    {
        "id": "72b62d92.982d14",
        "type": "http response",
        "z": "2d0a6c6c.43d744",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "afe81751.1ae778",
        "type": "template",
        "z": "2d0a6c6c.43d744",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"swagger\" : \"2.0\",\n  \"info\" : {\n    \"description\" : \"Ant Media Server REST API Reference\",\n    \"version\" : \"v2.0\",\n    \"title\" : \"Ant Media Server REST API Reference\",\n    \"termsOfService\" : \"\",\n    \"contact\" : {\n      \"name\" : \"Ant Media Info\",\n      \"url\" : \"https://antmedia.io\",\n      \"email\" : \"contact@antmedia.io\"\n    },\n    \"license\" : {\n      \"name\" : \"Apache 2.0\",\n      \"url\" : \"http://www.apache.org\"\n    }\n  },\n  \"host\" : \"crm40.neonzoom.com:5080\",\n  \"basePath\" : \"/WebRTCAppEE/rest\",\n  \"tags\" : [ {\n    \"name\" : \"BroadcastRestService\"\n  }, {\n    \"name\" : \"Rest Service\"\n  }, {\n    \"name\" : \"VoD Rest Service\"\n  } ],\n  \"paths\" : {\n    \"/v2/broadcasts/active-live-stream-count\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Return the active live streams\",\n        \"description\" : \"\",\n        \"operationId\" : \"getAppLiveStatistics\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/SimpleStat\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/conference-rooms\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Creates a conference room with the parameters. The room name is key so if this is called with the same room name then new room is overwritten to old one\",\n        \"description\" : \"\",\n        \"operationId\" : \"createConferenceRoomV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"Conference Room object with start and end date\",\n          \"required\" : true,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/ConferenceRoom\"\n          }\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Returns the created conference room\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/ConferenceRoom\"\n            }\n          },\n          \"400\" : {\n            \"description\" : \"If operation is no completed for any reason\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/conference-rooms/{room_id}\" : {\n      \"put\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Edits previously saved conference room\",\n        \"description\" : \"\",\n        \"operationId\" : \"editConferenceRoom\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"room_id\",\n          \"in\" : \"path\",\n          \"description\" : \"Room id\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"Conference Room object with start and end date\",\n          \"required\" : true,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/ConferenceRoom\"\n          }\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Returns the updated Conference room\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/ConferenceRoom\"\n            }\n          },\n          \"400\" : {\n            \"description\" : \"If operation is no completed for any reason\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      },\n      \"delete\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Deletes a conference room. The room id is key so if this is called with the same room id then new room is overwritten to old one\",\n        \"description\" : \"\",\n        \"operationId\" : \"deleteConferenceRoomV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"room_id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the conference room\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/count\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get the total number of broadcasts\",\n        \"description\" : \"\",\n        \"operationId\" : \"getTotalBroadcastNumberV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/SimpleStat\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/create\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Creates a Broadcast, IP Camera or Stream Source and returns the full broadcast object with rtmp address and other information. The different between Broadcast and IP Camera or Stream Source is that Broadcast is ingested by Ant Media ServerIP Camera or Stream Source is pulled by Ant Media Server\",\n        \"description\" : \"\",\n        \"operationId\" : \"createBroadcast\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"Broadcast object only related information should be set, it may be null as well.\",\n          \"required\" : false,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/Broadcast\"\n          }\n        }, {\n          \"name\" : \"socialNetworks\",\n          \"in\" : \"query\",\n          \"description\" : \"Comma separated social network IDs, they must in comma separated and IDs must match with the defined IDs.\",\n          \"required\" : false,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"autoStart\",\n          \"in\" : \"query\",\n          \"description\" : \"Only effective if stream is IP Camera or Stream Source. If it's true, it starts automatically pulling stream. Default value is false by default\",\n          \"required\" : false,\n          \"type\" : \"boolean\",\n          \"default\" : false\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Returns the created stream\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Broadcast\"\n            }\n          },\n          \"400\" : {\n            \"description\" : \"If stream id is already used in the data store, it returns error\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/filter-list/{offset}/{size}/{type}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Returns filtered broadcast list according to type. It's useful for getting IP Camera and Stream Sources from the whole list\",\n        \"description\" : \"\",\n        \"operationId\" : \"filterBroadcastListV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"offset\",\n          \"in\" : \"path\",\n          \"description\" : \"starting point of the list\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"size\",\n          \"in\" : \"path\",\n          \"description\" : \"size of the return list (max:50 )\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"type\",\n          \"in\" : \"path\",\n          \"description\" : \"type of the stream. Possible values are \\\"liveStream\\\", \\\"ipCamera\\\", \\\"streamSource\\\", \\\"VoD\\\"\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"$ref\" : \"#/definitions/Broadcast\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/import-to-stalker\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Import Live Streams to Stalker Portal\",\n        \"description\" : \"\",\n        \"operationId\" : \"importLiveStreams2StalkerV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/list/{offset}/{size}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Gets the broadcast list from database\",\n        \"description\" : \"\",\n        \"operationId\" : \"getBroadcastList\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"offset\",\n          \"in\" : \"path\",\n          \"description\" : \"This is the offset of the list, it is useful for pagination\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"size\",\n          \"in\" : \"path\",\n          \"description\" : \"Number of items that will be fetched. If there is not enough item in the datastore, returned list size may less then this value\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"$ref\" : \"#/definitions/Broadcast\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/onvif-devices\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get Discovered ONVIF IP Cameras, this service perform a discovery inside of internal network and get automatically  ONVIF enabled camera information\",\n        \"description\" : \"Notes here\",\n        \"operationId\" : \"searchOnvifDevicesV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/social-endpoints/{offset}/{size}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get Credentials of Social Endpoints\",\n        \"description\" : \"\",\n        \"operationId\" : \"getSocialEndpointsV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"offset\",\n          \"in\" : \"path\",\n          \"description\" : \"the starting point of the list\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"size\",\n          \"in\" : \"path\",\n          \"description\" : \"size of the return list (max:50 )\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"$ref\" : \"#/definitions/SocialEndpointCredentials\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/social-network-status/{userCode}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Check if device is authenticated in the social network. In authorization phase, this function may be polled periodically until it returns success.Server checks social network service for about 1 minute so that if userdoes not enter DeviceAuthParameters in a 1 minute, this function willnever return true\",\n        \"description\" : \"\",\n        \"operationId\" : \"checkDeviceAuthStatusV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"userCode\",\n          \"in\" : \"path\",\n          \"description\" : \"Code of social media account\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/social-networks-channel-lists/{endpointId}/{type}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Returns available social network channels for the specific service\",\n        \"description\" : \"\",\n        \"operationId\" : \"getSocialNetworkChannelListV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"endpointId\",\n          \"in\" : \"path\",\n          \"description\" : \"endpointId\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"type\",\n          \"in\" : \"path\",\n          \"description\" : \"This is very service specific, it may be page for Facebook\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"$ref\" : \"#/definitions/SocialEndpointChannel\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/social-networks-channel/{endpointId}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Some social networks have different channels especially for facebook,Live stream can be published on Facebook Page or Personal account, thisservice returns the related information about that.\",\n        \"description\" : \"\",\n        \"operationId\" : \"getSocialNetworkChannelV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"endpointId\",\n          \"in\" : \"path\",\n          \"description\" : \"endpointId\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/SocialEndpointChannel\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/social-networks-channels/{endpointId}/{type}/{id}\" : {\n      \"put\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"If there are multiple channels in a social network,this method sets specific channel for that endpointIf a user has pages in Facebook, this method sets the specific page to publish live stream to\",\n        \"description\" : \"\",\n        \"operationId\" : \"setSocialNetworkChannelListV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"endpointId\",\n          \"in\" : \"path\",\n          \"description\" : \"endpointId\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"type\",\n          \"in\" : \"path\",\n          \"description\" : \"type\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"id\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/social-networks/{endpointId}\" : {\n      \"delete\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Revoke authorization from a social network account that is authorized before\",\n        \"description\" : \"\",\n        \"operationId\" : \"revokeSocialNetworkV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"endpointId\",\n          \"in\" : \"path\",\n          \"description\" : \"Endpoint id\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/social-networks/{serviceName}\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get device parameters for social network authorization.\",\n        \"description\" : \"\",\n        \"operationId\" : \"getDeviceAuthParametersV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"serviceName\",\n          \"in\" : \"path\",\n          \"description\" : \"Name of the service, like Facebook, Youtube, Periscope\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"object\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/validate-token\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Perform validation of token for requested stream. If validated, success field is true, not validated success field false\",\n        \"description\" : \"\",\n        \"operationId\" : \"validateTokenV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"Token to be validated\",\n          \"required\" : true,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/Token\"\n          }\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/webrtc-receive-low-level-stats\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get WebRTC Low Level receive stats in general\",\n        \"description\" : \"\",\n        \"operationId\" : \"getWebRTCLowLevelReceiveStats\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/WebRTCSendStats\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/webrtc-send-low-level-stats\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get WebRTC Low Level Send stats in general\",\n        \"description\" : \"\",\n        \"operationId\" : \"getWebRTCLowLevelSendStats\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/WebRTCSendStats\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get broadcast object\",\n        \"description\" : \"\",\n        \"operationId\" : \"getBroadcast\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"id of the broadcast\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Return the broadcast object\"\n          },\n          \"404\" : {\n            \"description\" : \"Broadcast object not found\"\n          }\n        }\n      },\n      \"put\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Updates the Broadcast objects fields if it's not null. The updated fields are as follows: name, description, userName, password, IP address, streamUrl of the broadcast. It also updates the social endpoints\",\n        \"description\" : \"\",\n        \"operationId\" : \"updateBroadcast\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"Broadcast id\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"Broadcast object with the updates\",\n          \"required\" : false,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/Broadcast\"\n          }\n        }, {\n          \"name\" : \"socialNetworks\",\n          \"in\" : \"query\",\n          \"description\" : \"Comma separated social network IDs, they must in comma separated and IDs must match with the defined IDs\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"If it's updated, success field is true. If it's not updated, success  field if false.\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      },\n      \"delete\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Delete broadcast from data store and stop if it's broadcasting\",\n        \"description\" : \"\",\n        \"operationId\" : \"deleteBroadcast\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \" Id of the braodcast\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"If it's deleted, success is true. If it's not deleted, success if false.\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/broadcast-statistics\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get the broadcast live statistics total RTMP watcher count, total HLS watcher count, total WebRTC watcher count\",\n        \"description\" : \"\",\n        \"operationId\" : \"getBroadcastStatistics\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/BroadcastStatistics\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/detections/count\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get total number of detected objects\",\n        \"description\" : \"\",\n        \"operationId\" : \"getObjectDetectedTotal\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"integer\",\n              \"format\" : \"int64\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/detections/{offset}/{size}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get detected objects from the stream based on offset and size\",\n        \"description\" : \"\",\n        \"operationId\" : \"getDetectionListV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"offset\",\n          \"in\" : \"path\",\n          \"description\" : \"starting point of the list\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"size\",\n          \"in\" : \"path\",\n          \"description\" : \"total size of the return list\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"$ref\" : \"#/definitions/TensorFlowObject\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/endpoint\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Add a third pary rtmp end point to the stream. It supports adding after broadcast is started \",\n        \"description\" : \"\",\n        \"operationId\" : \"addEndpointV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"Broadcast id\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"rtmpUrl\",\n          \"in\" : \"query\",\n          \"description\" : \"RTMP url of the endpoint that stream will be republished. If required, please encode the URL\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      },\n      \"delete\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Remove third pary rtmp end point from the stream. For the stream that is broadcasting, it will stop immediately\",\n        \"description\" : \"\",\n        \"operationId\" : \"removeEndpoint\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"Broadcast id\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"rtmpUrl\",\n          \"in\" : \"query\",\n          \"description\" : \"RTMP url of the endpoint that will be stopped.\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/ip-camera/move\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Move IP Camera. It support continuous, relative and absolute move. By default it's relative move.Movement parameters should be given according to movement type. Generally here are the values For Absolute move, value X and value Y is between -1.0f and 1.0f. Zooom value is between 0.0f and 1.0fFor Relative move, value X, value Y and Zoom Value is between -1.0f and 1.0fFor Continous move,value X, value Y and Zoom Value is between -1.0f and 1.0f \",\n        \"description\" : \"\",\n        \"operationId\" : \"moveIPCamera\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"The id of the IP Camera\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"valueX\",\n          \"in\" : \"query\",\n          \"description\" : \"Movement in X direction. If not specified, it's assumed to be zero. Valid ranges between -1.0f and 1.0f for all movements \",\n          \"required\" : false,\n          \"type\" : \"number\",\n          \"format\" : \"float\"\n        }, {\n          \"name\" : \"valueY\",\n          \"in\" : \"query\",\n          \"description\" : \"Movement in Y direction. If not specified, it's assumed to be zero. Valid ranges between -1.0f and 1.0f for all movements \",\n          \"required\" : false,\n          \"type\" : \"number\",\n          \"format\" : \"float\"\n        }, {\n          \"name\" : \"valueZ\",\n          \"in\" : \"query\",\n          \"description\" : \"Movement in Zoom. If not specified, it's assumed to be zero. Valid ranges for relative and continous move is between -1.0f and 1.0f. For absolute move between 0.0f and 1.0f \",\n          \"required\" : false,\n          \"type\" : \"number\",\n          \"format\" : \"float\"\n        }, {\n          \"name\" : \"movement\",\n          \"in\" : \"query\",\n          \"description\" : \"Movement type. It can be absolute, relative or continuous. If not specified, it's relative\",\n          \"required\" : false,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/ip-camera/stop-move\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Stop move for IP Camera.\",\n        \"description\" : \"\",\n        \"operationId\" : \"stopMove\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the IP Camera\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/recording/{recording-status}\" : {\n      \"put\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Set stream specific recording setting, this setting overrides general Mp4 Muxing Setting\",\n        \"description\" : \"\",\n        \"operationId\" : \"enableMp4Muxing\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"recording-status\",\n          \"in\" : \"path\",\n          \"description\" : \"Change recording status. If true, starts recording. If false stop recording\",\n          \"required\" : true,\n          \"type\" : \"boolean\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/social-endpoints/{endpointServiceId}\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Add social endpoint to a stream for the specified service id. \",\n        \"description\" : \"\",\n        \"operationId\" : \"addSocialEndpointJSONV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"Stream id\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"endpointServiceId\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the service in order to have successfull operation. Social network must be authorized in advance\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/social-endpoints/{endpointServiceId}/interaction\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Return the interaction from a specific endpoint like Facebook, Youtube, PSCP, etc. It works If interactivity is collected which can be enabled/disabled by properties file.\",\n        \"description\" : \"\",\n        \"operationId\" : \"getInteractionFromEndpointV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"endpointServiceId\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the endpoint\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Interaction\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/social-endpoints/{endpointServiceId}/live-comments-count\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Returns the number of live comment count from a specific video service endpoint. It works If interactivity is collected which can be enabled/disabled by properties file.\",\n        \"description\" : \"\",\n        \"operationId\" : \"getLiveCommentsCountV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"endpointServiceId\",\n          \"in\" : \"path\",\n          \"description\" : \" the id of the endpoint\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/social-endpoints/{endpointServiceId}/live-comments/{offset}/{batch}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Returns live comments from a specific endpoint like Facebook, Youtube, PSCP, etc. It works If interactivity is collected which can be enabled/disabled by properties file.\",\n        \"description\" : \"Notes here\",\n        \"operationId\" : \"getLiveCommentsFromEndpointV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"endpointServiceId\",\n          \"in\" : \"path\",\n          \"description\" : \"This is the id of the endpoint service\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"Broadcast id\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"offset\",\n          \"in\" : \"path\",\n          \"description\" : \"this is the start offset where to start getting comment\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"batch\",\n          \"in\" : \"path\",\n          \"description\" : \"number of items to be returned\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"$ref\" : \"#/definitions/LiveComment\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/social-endpoints/{endpointServiceId}/live-views-count\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Return the number of live views in specified video service endpoint. It works If interactivity is collected which can be enabled/disabled by properties file.\",\n        \"description\" : \"\",\n        \"operationId\" : \"getViewerCountFromEndpointV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"endpointServiceId\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the endpoint\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/start\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Start external sources (IP Cameras and Stream Sources) again if it is added and stopped before\",\n        \"description\" : \"\",\n        \"operationId\" : \"startStreamSourceV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream. The broadcast type should be IP Camera or Stream Source otherwise it does not work\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/stop\" : {\n      \"post\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Stop streaming for the active stream. It both stops ingested(RTMP, WebRTC) or pulled stream sources (IP Cameras and Stream Sources)\",\n        \"description\" : \"\",\n        \"operationId\" : \"stopStreamingV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the broadcast.\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/token\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Generates random one-time token for specified stream\",\n        \"description\" : \"\",\n        \"operationId\" : \"getTokenV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"The id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"expireDate\",\n          \"in\" : \"query\",\n          \"description\" : \"The expire time of the token. It's in unix timestamp seconds\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        }, {\n          \"name\" : \"type\",\n          \"in\" : \"query\",\n          \"description\" : \"Type of the token. It may be play or publish \",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"roomId\",\n          \"in\" : \"query\",\n          \"description\" : \"Room Id that token belongs to. It's not mandatory \",\n          \"required\" : false,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Returns token\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Token\"\n            }\n          },\n          \"400\" : {\n            \"description\" : \"When there is an error in creating token\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/tokens\" : {\n      \"delete\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \" Removes all tokens related with requested stream\",\n        \"description\" : \"\",\n        \"operationId\" : \"revokeTokensV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{id}/tokens/list/{offset}/{size}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get the all tokens of requested stream\",\n        \"description\" : \"\",\n        \"operationId\" : \"listTokensV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"offset\",\n          \"in\" : \"path\",\n          \"description\" : \"the starting point of the list\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"size\",\n          \"in\" : \"path\",\n          \"description\" : \"size of the return list (max:50 )\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"$ref\" : \"#/definitions/Token\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{ipAddr}/ip-camera-error\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get IP Camera Error after connection failure. If returns true, it means there is an error. If returns false, there is no error\",\n        \"description\" : \"Notes here\",\n        \"operationId\" : \"getCameraErrorV2\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"ipAddr\",\n          \"in\" : \"path\",\n          \"description\" : \"IP Addr of the Camera. This IP may contain port number\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/broadcasts/{stream_id}/webrtc-client-stats/{offset}/{size}\" : {\n      \"get\" : {\n        \"tags\" : [ \"BroadcastRestService\" ],\n        \"summary\" : \"Get WebRTC Client Statistics such as : Audio bitrate, Video bitrate, Target bitrate, Video Sent Period etc.\",\n        \"description\" : \"\",\n        \"operationId\" : \"getWebRTCClientStatsListV2\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"offset\",\n          \"in\" : \"path\",\n          \"description\" : \"offset of the list\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"size\",\n          \"in\" : \"path\",\n          \"description\" : \"Number of items that will be fetched\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"stream_id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the stream\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"$ref\" : \"#/definitions/WebRTCClientStats\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/version\" : {\n      \"get\" : {\n        \"tags\" : [ \"Rest Service\" ],\n        \"summary\" : \"Returns the Ant Media Server Version\",\n        \"description\" : \"\",\n        \"operationId\" : \"getVersion\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Version\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/vods/count\" : {\n      \"get\" : {\n        \"tags\" : [ \"VoD Rest Service\" ],\n        \"summary\" : \"Get the total number of VoDs\",\n        \"description\" : \"\",\n        \"operationId\" : \"getTotalVodNumber\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"integer\",\n              \"format\" : \"int64\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/vods/create\" : {\n      \"post\" : {\n        \"tags\" : [ \"VoD Rest Service\" ],\n        \"summary\" : \"Upload external VoD file to Ant Media Server\",\n        \"description\" : \"\",\n        \"operationId\" : \"uploadVoDFile\",\n        \"consumes\" : [ \"multipart/form-data\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"name\",\n          \"in\" : \"query\",\n          \"description\" : \"the name of the VoD File\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"file\",\n          \"required\" : true,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/InputStream\"\n          }\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/vods/import-to-stalker\" : {\n      \"post\" : {\n        \"tags\" : [ \"VoD Rest Service\" ],\n        \"summary\" : \"Import VoDs to Stalker Portal\",\n        \"description\" : \"\",\n        \"operationId\" : \"importVoDsToStalker\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/vods/list/{offset}/{size}\" : {\n      \"get\" : {\n        \"tags\" : [ \"VoD Rest Service\" ],\n        \"summary\" : \" Get the VoD list from database\",\n        \"description\" : \"\",\n        \"operationId\" : \"getVodList\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"offset\",\n          \"in\" : \"path\",\n          \"description\" : \"offset of the list\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"size\",\n          \"in\" : \"path\",\n          \"description\" : \"Number of items that will be fetched\",\n          \"required\" : true,\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        }, {\n          \"name\" : \"sort_by\",\n          \"in\" : \"query\",\n          \"description\" : \"Field to sort\",\n          \"required\" : false,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"order_by\",\n          \"in\" : \"query\",\n          \"description\" : \"asc for Ascending, desc Descening order\",\n          \"required\" : false,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"$ref\" : \"#/definitions/VoD\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/vods/synch-user-vod-list\" : {\n      \"post\" : {\n        \"tags\" : [ \"VoD Rest Service\" ],\n        \"summary\" : \"Synchronize VoD Folder and add them to VoD database if any file exist and create symbolic links to that folder\",\n        \"description\" : \"Notes here\",\n        \"operationId\" : \"synchUserVodList\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    },\n    \"/v2/vods/{id}\" : {\n      \"get\" : {\n        \"tags\" : [ \"VoD Rest Service\" ],\n        \"summary\" : \"VoD file from database\",\n        \"description\" : \"\",\n        \"operationId\" : \"getVoD\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"id of the VoD\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/VoD\"\n            }\n          }\n        }\n      },\n      \"delete\" : {\n        \"tags\" : [ \"VoD Rest Service\" ],\n        \"summary\" : \"Delete specific VoD File\",\n        \"description\" : \"\",\n        \"operationId\" : \"deleteVoD\",\n        \"consumes\" : [ \"application/json\" ],\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"id\",\n          \"in\" : \"path\",\n          \"description\" : \"the id of the VoD file\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Result\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"definitions\" : {\n    \"Broadcast\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"streamId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the stream\"\n        },\n        \"status\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the status of the stream\",\n          \"enum\" : [ \"finished\", \"broadcasting\", \"created\" ]\n        },\n        \"type\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the type of the stream\",\n          \"enum\" : [ \"liveStream\", \"ipCamera\", \"streamSource\", \"VoD\" ]\n        },\n        \"name\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the name of the stream\"\n        },\n        \"description\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the description of the stream\"\n        },\n        \"publish\" : {\n          \"type\" : \"boolean\",\n          \"description\" : \"it is a video filter for the service, this value is controlled by the user, default value is true in the db\"\n        },\n        \"date\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the date when record is created in milliseconds\"\n        },\n        \"plannedStartDate\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the planned start date\"\n        },\n        \"duration\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the duration of the stream in milliseconds\"\n        },\n        \"endPointList\" : {\n          \"type\" : \"array\",\n          \"description\" : \"the list of endpoints such as Facebook, Twitter or custom RTMP endpoints  \",\n          \"items\" : {\n            \"$ref\" : \"#/definitions/Endpoint\"\n          }\n        },\n        \"publicStream\" : {\n          \"type\" : \"boolean\",\n          \"description\" : \"the identifier of whether stream is public or not\"\n        },\n        \"is360\" : {\n          \"type\" : \"boolean\",\n          \"description\" : \"the identifier of whether stream is 360 or not\"\n        },\n        \"listenerHookURL\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the url that will be notified when stream is published, ended and muxing finished\"\n        },\n        \"category\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the category of the stream\"\n        },\n        \"ipAddr\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the IP Address of the IP Cameraor publisher\"\n        },\n        \"username\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the user name of the IP Camera\"\n        },\n        \"password\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the password of the IP Camera\"\n        },\n        \"quality\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the quality of the incoming stream during publishing\"\n        },\n        \"speed\" : {\n          \"type\" : \"number\",\n          \"format\" : \"double\",\n          \"description\" : \"the speed of the incoming stream, for better quality and performance it should be around 1.00\"\n        },\n        \"streamUrl\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the stream URL for fetching stream, especially should be defined for IP Cameras or Cloud streams\"\n        },\n        \"originAdress\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the origin address server broadcasting\"\n        },\n        \"mp4Enabled\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"MP4 muxing whether enabled or not for the stream, 1 means enabled, -1 means disabled, 0 means no settings for the stream\"\n        },\n        \"expireDurationMS\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the expire time in milliseconds For instance if this value is 10000 then broadcast should be started in 10 seconds after it is created.If expire duration is 0, then stream will never expire\"\n        },\n        \"rtmpURL\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the RTMP URL where to publish live stream to\"\n        },\n        \"zombi\" : {\n          \"type\" : \"boolean\",\n          \"description\" : \"is true, if a broadcast that is not added to data store through rest service or management console It is false by default\"\n        },\n        \"pendingPacketSize\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the number of audio and video packets that is being pending to be encoded in the queue \"\n        },\n        \"hlsViewerCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the number of HLS viewers of the stream\"\n        },\n        \"webRTCViewerCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the number of WebRTC viewers of the stream\"\n        },\n        \"rtmpViewerCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the number of RTMP viewers of the stream\"\n        },\n        \"startTime\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the publishing start time of the stream\"\n        },\n        \"receivedBytes\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the received bytes until now\"\n        },\n        \"bitrate\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the received bytes / duration\"\n        },\n        \"userAgent\" : {\n          \"type\" : \"string\",\n          \"description\" : \"User - Agent\"\n        },\n        \"latitude\" : {\n          \"type\" : \"string\",\n          \"description\" : \"latitude of the broadcasting location\"\n        },\n        \"longitude\" : {\n          \"type\" : \"string\",\n          \"description\" : \"longitude of the broadcasting location\"\n        },\n        \"altitude\" : {\n          \"type\" : \"string\",\n          \"description\" : \"altitude of the broadcasting location\"\n        }\n      },\n      \"description\" : \"The basic broadcast class\"\n    },\n    \"BroadcastStatistics\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"totalRTMPWatchersCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the total RTMP viewers of the stream\"\n        },\n        \"totalHLSWatchersCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the total HLS viewers of the stream\"\n        },\n        \"totalWebRTCWatchersCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the total WebRTC viewers of the stream\"\n        }\n      },\n      \"description\" : \"The statistics class of the broadcasts\"\n    },\n    \"ConferenceRoom\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"roomId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the Conference Room\"\n        },\n        \"startDate\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the start date of the Conference Room\"\n        },\n        \"endDate\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the end date of the Conference Room\"\n        }\n      },\n      \"description\" : \"The Conference Room class\"\n    },\n    \"Endpoint\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the service name like facebook, periscope, youtube or generic\"\n        },\n        \"broadcastId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id in the end point, Social endpoints has this field but generic endpoint does not have \"\n        },\n        \"streamId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id in the endpoint if exists, it may be null\"\n        },\n        \"rtmpUrl\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the RTMP URL of the endpoint\"\n        },\n        \"name\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the name of the stream\"\n        },\n        \"endpointServiceId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the endpoint service id, this field holds the id of the endpoint\"\n        },\n        \"serverStreamId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the stream in the server\"\n        }\n      },\n      \"description\" : \"The endpoint class, such as Facebook, Twitter or custom RTMP endpoints\"\n    },\n    \"InputStream\" : {\n      \"type\" : \"object\"\n    },\n    \"Interaction\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"origin\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the origin of the resource\",\n          \"enum\" : [ \"facebook\", \"periscope\", \"youtube\", \"server\" ]\n        },\n        \"likeCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the total number of like interaction\"\n        },\n        \"wowCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the total number of wow interaction\"\n        },\n        \"sadCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the total number of sad interaction\"\n        },\n        \"angryCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the total number of angry interaction\"\n        },\n        \"hahaCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the total number of haha interaction\"\n        },\n        \"loveCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the total number of like interaction\"\n        }\n      },\n      \"description\" : \"The social media interaction for stream class\"\n    },\n    \"LiveComment\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the comment\"\n        },\n        \"message\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the content of the comment\"\n        },\n        \"from\" : {\n          \"description\" : \"the owner of the comment\",\n          \"$ref\" : \"#/definitions/User\"\n        },\n        \"origin\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the origin of the comment\",\n          \"enum\" : [ \"facebook\", \"periscope\", \"youtube\", \"server\" ]\n        },\n        \"timestamp\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the timestamp of the stream\"\n        }\n      },\n      \"description\" : \"The live comment class written on social media about related stream\"\n    },\n    \"Result\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"success\" : {\n          \"type\" : \"boolean\",\n          \"description\" : \"the result of the operation\"\n        },\n        \"message\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the message of the operation result\"\n        },\n        \"dataId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the record if operation is about adding a record\"\n        },\n        \"errorId\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the id of errror of the operation result\"\n        }\n      },\n      \"description\" : \"The basic result class\"\n    },\n    \"SimpleStat\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"number\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the stat value\"\n        }\n      },\n      \"description\" : \"Simple generic statistics class to return single values\"\n    },\n    \"SocialEndpointChannel\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the type of the social end point channel\"\n        },\n        \"name\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the name of the social end point channel\"\n        },\n        \"id\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the social end point channel\"\n        }\n      },\n      \"description\" : \"The SocialEndpointChannel parameter class\"\n    },\n    \"SocialEndpointCredentials\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the record that is stored in db\"\n        },\n        \"accountName\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the account or Page name\"\n        },\n        \"serviceName\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the name of the service like Facebook, Youtube, Periscope, Twitch etc.\"\n        },\n        \"accountType\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the user account, page account, etc.\"\n        }\n      },\n      \"description\" : \"The SocialEndpoint Credentials  class\"\n    },\n    \"TensorFlowObject\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"objectName\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the name of the detected object\"\n        },\n        \"probability\" : {\n          \"type\" : \"number\",\n          \"format\" : \"float\",\n          \"description\" : \"the probablity of the detected object\"\n        },\n        \"detectionTime\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the time of the detected object\"\n        },\n        \"imageId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the detected image\"\n        }\n      },\n      \"description\" : \"The TensorFlow detected object class\"\n    },\n    \"Token\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"tokenId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the token id of the token\"\n        },\n        \"streamId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the stream id of the token\"\n        },\n        \"expireDate\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the expire date of the token\"\n        },\n        \"type\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the type of the token\"\n        },\n        \"roomId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the conference room which requested streams belongs to\"\n        }\n      },\n      \"description\" : \"The one-time token class\"\n    },\n    \"User\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"email\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the email of the user\"\n        },\n        \"userType\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the type of the user\",\n          \"enum\" : [ \"facebook_user\", \"periscope_user\", \"youtube_user\", \"admin\" ]\n        },\n        \"fullName\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the name of the user\"\n        },\n        \"picture\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the URL of the user picture\"\n        },\n        \"id\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the user\"\n        }\n      },\n      \"description\" : \"The basic user class\"\n    },\n    \"Version\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"versionName\" : {\n          \"type\" : \"string\",\n          \"description\" : \"Version of the software\"\n        },\n        \"versionType\" : {\n          \"type\" : \"string\",\n          \"description\" : \"Version type of the software (Community or Enterprise)\"\n        },\n        \"buildNumber\" : {\n          \"type\" : \"string\",\n          \"description\" : \"Build number(timestamp) of the software.\"\n        }\n      },\n      \"description\" : \"The version class\"\n    },\n    \"VoD\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"streamName\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the object id of the VoD\"\n        },\n        \"vodName\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the name of the VoD\"\n        },\n        \"streamId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the stream id of the VoD\"\n        },\n        \"creationDate\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the creation of the VoD\"\n        },\n        \"duration\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the duration of the VoD\"\n        },\n        \"fileSize\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"the size of the VoD\"\n        },\n        \"filePath\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the path of the VoD\"\n        },\n        \"vodId\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the id of the VoD\"\n        },\n        \"type\" : {\n          \"type\" : \"string\",\n          \"description\" : \"the type of the VoD, such as userVod, streamVod, uploadedVod\"\n        }\n      },\n      \"description\" : \"The recorded video-on-demand object class\"\n    },\n    \"WebRTCAudioSendStats\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"audioPacketsSent\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        },\n        \"audioBytesSent\" : {\n          \"type\" : \"integer\"\n        },\n        \"audioPacketsPerSecond\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        },\n        \"audioBytesSentPerSecond\" : {\n          \"type\" : \"integer\"\n        },\n        \"timeMs\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        }\n      }\n    },\n    \"WebRTCClientStats\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"measuredBitrate\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the measured bitrate of the WebRTC Client\"\n        },\n        \"sendBitrate\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"the sent bitrate of the WebRTC Client\"\n        },\n        \"videoFrameSendPeriod\" : {\n          \"type\" : \"number\",\n          \"format\" : \"double\",\n          \"description\" : \"the video frame sent period of the WebRTC Client\"\n        },\n        \"audioFrameSendPeriod\" : {\n          \"type\" : \"number\",\n          \"format\" : \"double\",\n          \"description\" : \"the audio frame send period of the WebRTC Client\"\n        },\n        \"clientId\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"WebRTC Client Id which is basically hash of the object\"\n        },\n        \"videoPacketCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"Number of video packets sent\"\n        },\n        \"audioPacketCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"description\" : \"Number of audio packets sent\"\n        },\n        \"videoSentStats\" : {\n          \"description\" : \"Video sent low level stats\",\n          \"$ref\" : \"#/definitions/WebRTCVideoSendStats\"\n        },\n        \"audioSentStats\" : {\n          \"description\" : \"Audio sent low level stats\",\n          \"$ref\" : \"#/definitions/WebRTCAudioSendStats\"\n        }\n      },\n      \"description\" : \"The WebRTC Client Statistics class\"\n    },\n    \"WebRTCSendStats\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"audioSendStats\" : {\n          \"description\" : \"Audio send stats\",\n          \"$ref\" : \"#/definitions/WebRTCAudioSendStats\"\n        },\n        \"videoSendStats\" : {\n          \"description\" : \"Video send stats\",\n          \"$ref\" : \"#/definitions/WebRTCVideoSendStats\"\n        }\n      },\n      \"description\" : \"Aggregation of WebRTC Low Level Send Stats\"\n    },\n    \"WebRTCVideoSendStats\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"videoFirCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        },\n        \"videoPliCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        },\n        \"videoNackCount\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        },\n        \"videoPacketsSent\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        },\n        \"videoFramesEncoded\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        },\n        \"videoBytesSent\" : {\n          \"type\" : \"integer\"\n        },\n        \"videoPacketsSentPerSecond\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        },\n        \"videoBytesSentPerSecond\" : {\n          \"type\" : \"integer\"\n        },\n        \"videoFramesEncodedPerSecond\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        },\n        \"timeMs\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        }\n      }\n    }\n  }\n}",
        "output": "json",
        "x": 440,
        "y": 160,
        "wires": [
            [
                "72b62d92.982d14"
            ]
        ]
    },
    {
        "id": "1a103be2.16f4d4",
        "type": "debug",
        "z": "2d0a6c6c.43d744",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "42b5b8a1.0fb128",
        "type": "inject",
        "z": "2d0a6c6c.43d744",
        "name": "",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 190,
        "y": 280,
        "wires": [
            [
                "edeb8100.eb9ed"
            ]
        ]
    },
    {
        "id": "edeb8100.eb9ed",
        "type": "swaggerui",
        "z": "2d0a6c6c.43d744",
        "name": "",
        "url": "http://localhost:1880/red-nodes/antmedia",
        "api": "Rest Service",
        "resource": "getVersion",
        "swaggerClient": "",
        "x": 370,
        "y": 280,
        "wires": [
            [
                "1a103be2.16f4d4"
            ]
        ]
    }
]